
Project2Game.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  000001a6  0000021a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000024c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  0000028c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ad5  00000000  00000000  000002cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009d6  00000000  00000000  00000da1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000311  00000000  00000000  00001777  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001a88  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004e4  00000000  00000000  00001b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000049  00000000  00000000  00001fe4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000202d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
   4:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
   8:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
   c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  10:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  14:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  18:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  1c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  20:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  24:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  28:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  2c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  30:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  34:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__vector_13>
  38:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  3c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  40:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  44:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  48:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  4c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  50:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  54:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  58:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  5c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  60:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  64:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  68:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  6c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  70:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  74:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  78:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  7c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  80:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  84:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  88:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  8c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  90:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  94:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  98:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  9c:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  a0:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  a4:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  a8:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  ac:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  b0:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  b4:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  b8:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  bc:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  c0:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  c4:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>
  c8:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <__bad_interrupt>

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d8 e0       	ldi	r29, 0x08	; 8
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
  d8:	11 e0       	ldi	r17, 0x01	; 1
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b1 e0       	ldi	r27, 0x01	; 1
  de:	e6 ea       	ldi	r30, 0xA6	; 166
  e0:	f1 e0       	ldi	r31, 0x01	; 1
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
  e4:	05 90       	lpm	r0, Z+
  e6:	0d 92       	st	X+, r0
  e8:	a2 30       	cpi	r26, 0x02	; 2
  ea:	b1 07       	cpc	r27, r17
  ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>
  ee:	0e 94 bd 00 	call	0x17a	; 0x17a <main>
  f2:	0c 94 d1 00 	jmp	0x1a2	; 0x1a2 <_exit>

000000f6 <__bad_interrupt>:
  f6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fa <__vector_13>:
#define F_CPU 16000000UL
#include "util/delay.h"

int sec = 5;

ISR(TIMER1_COMPA_vect){
  fa:	1f 92       	push	r1
  fc:	0f 92       	push	r0
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	0f 92       	push	r0
 102:	11 24       	eor	r1, r1
 104:	8f 93       	push	r24
 106:	9f 93       	push	r25
	TCNT1 = 0x00;
 108:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 10c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	sec--;
 110:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 114:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 11e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
}
 122:	9f 91       	pop	r25
 124:	8f 91       	pop	r24
 126:	0f 90       	pop	r0
 128:	0f be       	out	0x3f, r0	; 63
 12a:	0f 90       	pop	r0
 12c:	1f 90       	pop	r1
 12e:	18 95       	reti

00000130 <timer_init_ctc>:

void timer_init_ctc(){
	TCCR1A = 0x00;
 130:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B |= 0x00 | (1 << WGM13) | (1 << WGM12);
 134:	e1 e8       	ldi	r30, 0x81	; 129
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	88 61       	ori	r24, 0x18	; 24
 13c:	80 83       	st	Z, r24
	TCNT1 |= 0x00;
 13e:	e4 e8       	ldi	r30, 0x84	; 132
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	91 81       	ldd	r25, Z+1	; 0x01
 146:	91 83       	std	Z+1, r25	; 0x01
 148:	80 83       	st	Z, r24
	TIMSK1 |= (1 << OCIE1A);
 14a:	ef e6       	ldi	r30, 0x6F	; 111
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	80 81       	ld	r24, Z
 150:	82 60       	ori	r24, 0x02	; 2
 152:	80 83       	st	Z, r24
	OCR1A = 0xF424;
 154:	84 e2       	ldi	r24, 0x24	; 36
 156:	94 ef       	ldi	r25, 0xF4	; 244
 158:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 15c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
 160:	08 95       	ret

00000162 <timer1_start>:
}

void timer1_start(){
	TCCR1B |= (1 << CS12);
 162:	e1 e8       	ldi	r30, 0x81	; 129
 164:	f0 e0       	ldi	r31, 0x00	; 0
 166:	80 81       	ld	r24, Z
 168:	84 60       	ori	r24, 0x04	; 4
 16a:	80 83       	st	Z, r24
 16c:	08 95       	ret

0000016e <timer1_stop>:
}

void timer1_stop(){
	TCCR1B &= ~( (1 << CS12) | (1 << CS11) | (1 << CS10));
 16e:	e1 e8       	ldi	r30, 0x81	; 129
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	88 7f       	andi	r24, 0xF8	; 248
 176:	80 83       	st	Z, r24
 178:	08 95       	ret

0000017a <main>:
}


int main(void)
{
	DDRD = 0xFF;
 17a:	8f ef       	ldi	r24, 0xFF	; 255
 17c:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x00;
 17e:	1b b8       	out	0x0b, r1	; 11
	
	timer_init_ctc();
 180:	0e 94 98 00 	call	0x130	; 0x130 <timer_init_ctc>
	sei();
 184:	78 94       	sei
	timer1_start();
 186:	0e 94 b1 00 	call	0x162	; 0x162 <timer1_start>
	
    while (1) {
		if(sec <= 0){
 18a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 18e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 192:	18 16       	cp	r1, r24
 194:	19 06       	cpc	r1, r25
 196:	cc f3       	brlt	.-14     	; 0x18a <main+0x10>
			timer1_stop();
 198:	0e 94 b7 00 	call	0x16e	; 0x16e <timer1_stop>
			PORTD = 0xFF;
 19c:	8f ef       	ldi	r24, 0xFF	; 255
 19e:	8b b9       	out	0x0b, r24	; 11
 1a0:	f4 cf       	rjmp	.-24     	; 0x18a <main+0x10>

000001a2 <_exit>:
 1a2:	f8 94       	cli

000001a4 <__stop_program>:
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <__stop_program>
